// plugins

@import "compass";
@import "h5bp";
// @import "font-stacks";
// @import "960/grid";
// @import "susy";


// --------------------------------------------------------------------------------------------------------
// fontello icons
// --------------------------------------------------------------------------------------------------------

// fontello font import
/*@font-face {
  font-family: 'icons';
  src: url('/fonts/frontend/fontello/icons.eot?1638495');
  src: url('/fonts/frontend/fontello/icons.eot?1638495#iefix') format('embedded-opentype'),
       url('/fonts/frontend/fontello/icons.woff?1638495') format('woff'),
       url('/fonts/frontend/fontello/icons.ttf?1638495') format('truetype'),
       url('/fonts/frontend/fontello/icons.svg?1638495#icons') format('svg');
  font-weight: normal;
  font-style: normal;
}*/

%set-iconfamily {
  font-family: "icons";
  font-style: normal;
  font-weight: normal;
  speak: none;
}

@mixin icon ( $icon ) {
  @extend %set-iconfamily;

  @if ( $icon == 'icon-' ) { content: '\e800'; }
}

@mixin icon-insert ($icon, $pos, $pad: 10px) {
    @if ($pos == before) {
        &:before {
            @include icon($icon);

            padding-right: $pad;
        }
    }

    @if ($pos == after) {
        &:after {
            @include icon($icon);

            padding-left: $pad;
        }
    }
}


// --------------------------------------------------------------------------------------------------------
// font import
// --------------------------------------------------------------------------------------------------------

// @import url(//fonts.googleapis.com/css?family=Open+Sans:300,400|Oswald:300,400,700&subset=latin,latin-ext);



// --------------------------------------------------------------------------------------------------------
// variables before foundation settings
// --------------------------------------------------------------------------------------------------------

$fonts: (
    default: ('Helvetica Neue', Helvetica, Roboto, Arial, sans-serif),
    heading: ('Helvetica Neue', Helvetica, Roboto, Arial, sans-serif),
    btn: ('Helvetica Neue', Helvetica, Roboto, Arial, sans-serif),
    menu: ('Helvetica Neue', Helvetica, Roboto, Arial, sans-serif),
);

// function for font map
@function font($key) {
    @if map-has-key($fonts, $key) {
        @return map-get($fonts, $key);
    }

    @warn "Unknown `#{$key}` in $fonts.";
    @return null;
}


// --------------------------------------------------------------------------------------------------------
// font weights
// --------------------------------------------------------------------------------------------------------

$font-weights: (
    thin: 100,
    light: 300,
    normal: 400,
    medium: 500,
    semibold: 600,
    bold: 700,
    extrabold: 800,
    ultrabold: 900,
);

// function for font-weights map
@function font-weight($key) {
    @if map-has-key($font-weights, $key) {
        @return map-get($font-weights, $key);
    }

    @warn "Unknown `#{$key}` in $font-weights.";
    @return null;
}



// --------------------------------------------------------------------------------------------------------
// site specific colors
// --------------------------------------------------------------------------------------------------------

$xxx-colors: (
    color01: #222,
);

// function for custom colors map
@function xxx-color($key) {
    @if map-has-key($xxx-colors, $key) {
        @return map-get($xxx-colors, $key);
    }

    @warn "Unknown `#{$key}` in $xxx-colors.";
    @return null;
}


// --------------------------------------------------------------------------------------------------------
// base colors
// --------------------------------------------------------------------------------------------------------

$colors: (
    body-bg: #fff,
    font-primary: #222,
    h1: #222,
    h2: #333,
    h3: #444,
    h4: #555,
    h5: #666,
    h6: #777,
    a: #0000ff,
    divider: #ccc,
);

// function for colors map
@function color($key) {
    @if map-has-key($colors, $key) {
        @return map-get($colors, $key);
    }

    @warn "Unknown `#{$key}` in $colors.";
    @return null;
}



// --------------------------------------------------------------------------------------------------------
// foundation settings import
// --------------------------------------------------------------------------------------------------------

@import "../../../components/foundation/scss/vendor/normalize.scss";
@import "settings.scss";



// --------------------------------------------------------------------------------------------------------
// variables after foundation settings
// --------------------------------------------------------------------------------------------------------

// --------------------------------------------------------------------------------------------------------
// gutters
// --------------------------------------------------------------------------------------------------------
$gutters: (
    default: $grid-column-gutter,
    vertical: $grid-column-gutter,
    horizontal: $grid-column-gutter,
    small: $grid-column-gutter / 2,
    big: $grid-column-gutter * 2,
    x-big: $grid-column-gutter * 3,
);

// function for gutter map
@function gutter($key) {
    @if map-has-key($gutters, $key) {
        @return map-get($gutters, $key);
    }

    @warn "Unknown `#{$key}` in $gutters.";
    @return null;
}


// --------------------------------------------------------------------------------------------------------
// base style placeholders and mixins
// --------------------------------------------------------------------------------------------------------

%body-style {
    padding: 0;
    margin: 0;
    color: color(font-primary);
    font-family: font(default) !important;
    line-height: 150%;
    background-color: color(body-bg);
}

@mixin heading-style ( $h-color, $h-font-size-small, $h-font-size-medium ) {
    margin: 0 0 gutter(horizontal) * 1.5 0;
    font-family: font(heading);
    font-weight: normal;
    line-height: 1.4;

    // parameters
    color: $h-color;
    font-size: rem-calc($h-font-size-small);

    @include breakpoint(medium up) {
        font-size: rem-calc($h-font-size-medium);
    }
}

%h1-style {
    @include heading-style(color(h1), 34, 44);
}

%h2-style {
    @include heading-style(color(h2), 27, 37);
}

%h3-style {
    @include heading-style(color(h3), 22, 27);
}

%h4-style {
    @include heading-style(color(h4), 18, 23);
}

%h5-style {
    @include heading-style(color(h5), 18, 18);
}

%h6-style {
    @include heading-style(color(h6), 16, 16);
}

%a-style {
    color: color(a);
    text-decoration: none;
}

%hr-style {
    height: 1px;
    margin: 0;
    border: 0;
    background: color(divider);
}

%p-style {
    margin: 0 0 gutter(horizontal) 0;
}


// --------------------------------------------------------------------------------------------------------
// wisywygText mixins
// --------------------------------------------------------------------------------------------------------

%wysiwygText-body {
    @extend %body-style;
}

%wysiwygText-h1 {
    @extend %h1-style;
}

%wysiwygText-h2 {
    @extend %h2-style;
}

%wysiwygText-h3 {
    @extend %h3-style;
}

%wysiwygText-h4 {
    @extend %h4-style;
}

%wysiwygText-h5 {
    @extend %h5-style;
}

%wysiwygText-h6 {
    @extend %h6-style;
}

%wysiwygText-a {
    @extend %a-style;
}

%wysiwygText-p {
    @extend %p-style;
}

%wysiwygText-img {
    margin: gutter(vertical);
}

%wysiwygText-hr {
    @extend %hr-style;
}
